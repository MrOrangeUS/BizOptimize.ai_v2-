generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @map("_id") @default(auto()) @db.ObjectId
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  surveys       Survey[]
}

model Account {
  id                 String   @id @map("_id") @default(auto()) @db.ObjectId
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @map("_id") @default(auto()) @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @map("_id") @default(auto()) @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Survey {
  id          String      @id @map("_id") @default(auto()) @db.ObjectId
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  name        String?
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  answers     Answer[]
  suggestions Suggestion[]
  roadmap     Roadmap?
}

model Question {
  id      String   @id @map("_id") @default(auto()) @db.ObjectId
  text    String
  order   Int
  answers Answer[]
}

model Answer {
  id         String    @id @map("_id") @default(auto()) @db.ObjectId
  survey     Survey    @relation(fields: [surveyId], references: [id])
  surveyId   String
  question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
  text       String
  createdAt  DateTime   @default(now())
}

model Suggestion {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  survey    Survey  @relation(fields: [surveyId], references: [id])
  surveyId  String
  text      String
  createdAt DateTime @default(now())
}

model Roadmap {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  survey    Survey  @relation(fields: [surveyId], references: [id])
  surveyId  String  @unique
  content   String
  createdAt DateTime @default(now())
}
